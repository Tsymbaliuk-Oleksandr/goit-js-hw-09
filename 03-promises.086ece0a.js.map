{"mappings":"gfAAA,IAAAA,EAAAC,EAAA,SAqBA,SAASC,EAAcC,EAAUC,GAC/B,OAAO,IAAIC,SAAQ,SAACC,EAASC,GAC3B,IAAMC,EAAgBC,KAAKC,SAAW,GACtCC,YAAW,WACLH,EACFF,EAAQ,CAAEH,WAAUC,UAEpBG,EAAO,CAAEJ,WAAUC,YAEpBA,MA5BPJ,EAAAY,OAAOC,KAAK,CACVC,MAAO,QACPX,SAAU,YACVY,SAAU,MACVC,QAAS,EACTC,aAAc,OACdC,QAAS,IACTC,iBAAkB,IAClBC,aAAa,EACbC,iBAAkB,kBAClBC,aAAa,IAGF,CACXC,KAAMC,SAASC,cAAc,UAG1BF,KAAKG,iBAAiB,UAe3B,SAA2BC,GACzBA,EAAIC,iBAMJ,IALA,IAAMC,EAAO,IAAIC,SAASH,EAAII,eACxBC,EAASC,OAAOC,SAASL,EAAKM,IAAI,WAClCC,EAAQH,OAAOC,SAASL,EAAKM,IAAI,UACjCE,EAAOJ,OAAOC,SAASL,EAAKM,IAAI,SAE7BG,EAAI,EAAGA,EAAIN,EAAQM,GAAK,EAC/BpC,EAAcoC,EAAGF,EAAQE,EAAID,GAC1BE,MAAK,SAAAC,G,IAAGrC,EAAQqC,EAARrC,SAAUC,EAAKoC,EAALpC,MACjBJ,EAAAY,OAAO6B,QAAQ,uBAAwCC,OAAfvC,EAAS,QAAYuC,OAANtC,EAAM,UAE9DuC,OAAM,SAAAH,G,IAAGrC,EAAQqC,EAARrC,SAAUC,EAAKoC,EAALpC,MAClBJ,EAAAY,OAAOgC,QAAQ,sBAAqCF,OAAfvC,EAAS,QAAYuC,OAANtC,EAAM,a","sources":["src/js/03-promises.js"],"sourcesContent":["import { Notify } from 'notiflix/build/notiflix-notify-aio';\n\nNotify.init({\n  width: '280px',\n  position: 'right-top',\n  distance: '5px', \n  opacity: 1,\n  borderRadius: '10px', \n  timeout: 3000,\n  messageMaxLength: 110,\n  backOverlay: false,\n  backOverlayColor: 'rgba(0,0,0,0.5)',\n  closeButton: false,\n});\n\nconst refs = {\n  form: document.querySelector('.form'),\n};\n\nrefs.form.addEventListener('submit', btnCreatePromises);\n\nfunction createPromise(position, delay) {\n  return new Promise((resolve, reject) => {\n    const shouldResolve = Math.random() > 0.3;\n    setTimeout(() => {\n      if (shouldResolve) {\n        resolve({ position, delay });\n      } else {\n        reject({ position, delay });\n      }\n    }, delay);\n  });\n}\n\nfunction btnCreatePromises(evt) {\n  evt.preventDefault(); \n  const data = new FormData(evt.currentTarget);\n  const amount = Number.parseInt(data.get('amount'));\n  const delay = Number.parseInt(data.get('delay'));\n  const step = Number.parseInt(data.get('step'));\n\n  for (let i = 1; i < amount; i += 1) {\n    createPromise(i, delay + i * step)\n      .then(({ position, delay }) => {\n        Notify.success(`✅ Fulfilled promise ${position} in ${delay}ms`);\n      })\n      .catch(({ position, delay }) => {\n        Notify.failure(`❌ Rejected promise ${position} in ${delay}ms`);\n      });\n  }\n}"],"names":["$h6c0i","parcelRequire","$ce04d3a99e08e73b$var$createPromise","position","delay","Promise","resolve","reject","shouldResolve","Math","random","setTimeout","Notify","init","width","distance","opacity","borderRadius","timeout","messageMaxLength","backOverlay","backOverlayColor","closeButton","form","document","querySelector","addEventListener","evt","preventDefault","data","FormData","currentTarget","amount","Number","parseInt","get","delay1","step","i","then","param","success","concat","catch","failure"],"version":3,"file":"03-promises.086ece0a.js.map"}